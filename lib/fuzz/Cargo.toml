[package]
name = "data-encoding-fuzz"
version = "0.0.0"
authors = ["Automatically generated"]
publish = false
edition = "2021"

[package.metadata]
cargo-fuzz = true

[dependencies]
data-encoding = { path = ".." }
libfuzzer-sys = "0.4.3"

# Fuzz targets organization based on prefix:
# - fuzz_FOO: FOO holds for the fuzzing tools (property testing)
# - impl_FOO: FOO is correctly implemented (differential testing)
# - spec_FOO: FOO holds for the specification (property testing)

[[bin]]
name = "fuzz_any_spec"
path = "fuzz_targets/fuzz_any_spec.rs"

[[bin]]
name = "impl_encode"
path = "fuzz_targets/impl_encode.rs"

[[bin]]
name = "impl_decode"
path = "fuzz_targets/impl_decode.rs"

[[bin]]
name = "impl_encode_mut_str"
path = "fuzz_targets/impl_encode_mut_str.rs"

[[bin]]
name = "impl_encode_append"
path = "fuzz_targets/impl_encode_append.rs"

[[bin]]
name = "impl_encode_write_buffer"
path = "fuzz_targets/impl_encode_write_buffer.rs"

[[bin]]
name = "impl_new_encoder"
path = "fuzz_targets/impl_new_encoder.rs"

[[bin]]
name = "spec_decode_encode"
path = "fuzz_targets/spec_decode_encode.rs"

[[bin]]
name = "spec_encode_decode"
path = "fuzz_targets/spec_encode_decode.rs"

[[bin]]
name = "spec_spec_base"
path = "fuzz_targets/spec_spec_base.rs"

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
